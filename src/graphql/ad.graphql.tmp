# directive @positiveNumber on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

# scalar Long
# scalar ZonedDateTime
# scalar BigInt

# enum System {
#   GLX
#   GAL
# }

# enum PublicationStatus {
#   DRAFT
#   PUBLISH
#   ACCEPTED
# }

# enum TarComplexity {
#   SIMPLE
#   COMPLEX
# }

# enum ReasonForTarComplexity {
#   REASON1
#   REASON2
#   REASON3
# }

# enum RequiredAchieve {
#   REQUIRED1
#   REQUIRED2
# }

# enum DayNight {
#   DAY
#   NIGHT
# }

# enum CoordinationStatus {
#   NOT_REQUIRED
#   WAITING
#   NO_RESPONSE
#   APPROVED
#   REJECTED
#   STALE
# }

# enum ApprovalStatus {
#   WAITING_FOR_APPROVAL
#   APPROVED
#   APPROVED_WITH_RESTRICT
#   NOT_APPROVED
# }

# enum Classification {
#   UNCLAS
#   SENSI
#   CONFID
#   SEC
#   TSEC
#   INTEL
# }

# interface BaseEntity {
#   id: String!
#   realityId: Int!
#   classification: Classification
#   createdBy: String!
#   creationTime: ZonedDateTime!
#   dataVersion: BigInt!
#   lastUpdateTime: ZonedDateTime
#   lastUpdateBy: String
#   isDeleted: Boolean
#   isClassified: Boolean
#   secGroups: [String]
# }

# type TarData {
#   code: String!
#   complexity: TarComplexity
#   reason: ReasonForTarComplexity
# }

# type AD implements BaseEntity {
#   distributionLists: [String]!
#   tarData: TarData

#   id: String!
#   realityId: Int!
#   classification: Classification
#   createdBy: String!
#   creationTime: ZonedDateTime!
#   dataVersion: BigInt!
#   lastUpdateTime: ZonedDateTime
#   lastUpdateBy: String
#   isDeleted: Boolean
#   isClassified: Boolean
#   secGroups: [String]
# }

# type Query {
#   currentDataVersion: Long
# }

# input ADInput {
#   distributionLists: [Long]!
#   entityVersion: Long
#   howToAtt: HowToAttInput
#   creatingForce: String
#   owingSystem: System!
#   whatToAtt: [WhatToAttInput]!
#   objectiveId: ObjectiveIdInput
#   priorityInDestination: Int
#   remark: String
#   requiringRole: String
#   approvals: [ApprovalInput]!
#   tarData: TarDataInput
#   stepAndRole: StepAndRoleInput
#   publicationStatus: PublicationStatus!
# }

# input ObjectiveIdInput {
#   creatingSystem: Int
#   technicalId: String
# }

# input StepAndRoleInput {
#   currentStep: String
#   currentResponsibleRole: String
# }

# input TarDataInput {
#   code: String!
#   complexity: TarComplexity
#   reason: ReasonForTarComplexity
# }

# input ApprovalInput {
#   approval: BaseApprovalInput
#   intelApproval: IntelApprovalInput
# }

# input IntelApprovalInput {
#   typeId: String
#   approver: ApproverInput
#   approvalTime: ZonedDateTime
#   remark: String
#   status: ApprovalStatus!
#   isNzpChecked: Boolean
#   isSafetyChecked: Boolean
#   isNzChecked: Boolean
#   isDmChecked: Boolean
# }

# input ApprovalInput {
#   role: String
#   upn: String
#   name: String
# }

# input BaseApprovalInput {
#   typeId: String
#   approver: ApprovalInput
#   approvalTime: ZonedDateTime
#   remark: String
#   status: ApprovalStatus!
# }

# input WhatToAttInput {
#   requiredAchieve: RequieredEchiev
#   requiredAchieveRemark: String
#   attables: AttableInput!
# }

# input HowToAttInput {
#   name: String
# }
